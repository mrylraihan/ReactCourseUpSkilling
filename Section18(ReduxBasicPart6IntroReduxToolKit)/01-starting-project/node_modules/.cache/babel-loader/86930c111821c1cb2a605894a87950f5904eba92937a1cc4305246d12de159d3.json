{"ast":null,"code":"// import {createStore} from 'redux'\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initial = {\n  counter: 0,\n  toggle: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initial,\n  reducers: {\n    increment(state) {\n      // state.counter++ you can do this with redux ToolKit\n      return {\n        ...state,\n        counter: state.counter + 1\n      };\n    },\n    decrement(state) {\n      //state.counter--\n      return {\n        ...state,\n        counter: state.counter - 1\n      };\n    },\n    increase(state, action) {\n      // state.counter = state.counter + action.amount\n      return {\n        ...state,\n        counter: state.counter + action.amount\n      };\n    },\n    toggleCounter(state) {\n      // state.toggle = !state.toggle\n      return {\n        ...state,\n        toggle: !state.toggle\n      };\n    }\n  }\n});\n\n// const counterReducer = (state, action)=>{\n//     if(action.type == 'increment'){\n//         return { ...state, counter:state.counter + 1}\n//     }else if(action.type == 'decrement'){\n//         return { ...state, counter: state.counter - 1 }\n//     }else if(action.type == 'increase'){\n//         return { ...state, counter: state.counter + action.amount }\n//     } else if (action.type == 'toggle') {\n//         return { ...state, toggle: !state.toggle }\n//     } else{\n//         return state\n//     }\n// }\n\n// const store = createStore(counterReducer, initial)\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\n// const store = configureStore({reducer:{\n//     counter:counterSlice.reducer\n// }})\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initial","counter","toggle","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","amount","toggleCounter","store","reducer","counterActions","actions"],"sources":["/Volumes/External SSD/CodingSpace/ReactCourseUpSkilling/Section18(ReduxBasicPart5IntroReduxToolKit)/01-starting-project/src/store/index.js"],"sourcesContent":["// import {createStore} from 'redux'\nimport {createSlice, configureStore} from '@reduxjs/toolkit'\n\nconst initial = {counter:0, toggle:true}\n\nconst counterSlice = createSlice({\nname:'counter',\ninitialState: initial,\nreducers:{\n    increment(state){\n        // state.counter++ you can do this with redux ToolKit\n        return { ...state, counter: state.counter + 1 }\n    },\n    decrement(state){\n        //state.counter--\n        return { ...state, counter: state.counter - 1 }\n    },\n    increase(state, action){\n        // state.counter = state.counter + action.amount\n        return { ...state, counter: state.counter + action.amount }\n    },\n    toggleCounter(state){\n        // state.toggle = !state.toggle\n        return { ...state, toggle: !state.toggle }\n    }\n}\n})\n\n// const counterReducer = (state, action)=>{\n//     if(action.type == 'increment'){\n//         return { ...state, counter:state.counter + 1}\n//     }else if(action.type == 'decrement'){\n//         return { ...state, counter: state.counter - 1 }\n//     }else if(action.type == 'increase'){\n//         return { ...state, counter: state.counter + action.amount }\n//     } else if (action.type == 'toggle') {\n//         return { ...state, toggle: !state.toggle }\n//     } else{\n//         return state\n//     }\n// }\n\n// const store = createStore(counterReducer, initial)\nconst store = configureStore({reducer: counterSlice.reducer })\n// const store = configureStore({reducer:{\n    //     counter:counterSlice.reducer\n    // }})\n    export const counterActions = counterSlice.actions \n\nexport default store\n"],"mappings":"AAAA;AACA,SAAQA,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAE5D,MAAMC,OAAO,GAAG;EAACC,OAAO,EAAC,CAAC;EAAEC,MAAM,EAAC;AAAI,CAAC;AAExC,MAAMC,YAAY,GAAGL,WAAW,CAAC;EACjCM,IAAI,EAAC,SAAS;EACdC,YAAY,EAAEL,OAAO;EACrBM,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAC;MACZ;MACA,OAAO;QAAE,GAAGA,KAAK;QAAEP,OAAO,EAAEO,KAAK,CAACP,OAAO,GAAG;MAAE,CAAC;IACnD,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAC;MACZ;MACA,OAAO;QAAE,GAAGA,KAAK;QAAEP,OAAO,EAAEO,KAAK,CAACP,OAAO,GAAG;MAAE,CAAC;IACnD,CAAC;IACDS,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAC;MACnB;MACA,OAAO;QAAE,GAAGH,KAAK;QAAEP,OAAO,EAAEO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC;MAAO,CAAC;IAC/D,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAC;MAChB;MACA,OAAO;QAAE,GAAGA,KAAK;QAAEN,MAAM,EAAE,CAACM,KAAK,CAACN;MAAO,CAAC;IAC9C;EACJ;AACA,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMY,KAAK,GAAGf,cAAc,CAAC;EAACgB,OAAO,EAAEZ,YAAY,CAACY;AAAQ,CAAC,CAAC;AAC9D;AACI;AACA;AACA,OAAO,MAAMC,cAAc,GAAGb,YAAY,CAACc,OAAO;AAEtD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}