{"ast":null,"code":"var _jsxFileName = \"/Volumes/External SSD/CodingSpace/ReactCourseUpSkilling/Section16Redo(Part2Validation2)/01-starting-project 9/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log('name Input is Valid');\n    }\n  }, [enteredNameIsValid]);\n  const nameInputHandler = e => {\n    setEnteredName(e.target.value);\n    setEnteredNameIsValid(true);\n  };\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    if (enteredName.trim() === '') {\n      console.log('theres nothing here!');\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n    setEnteredName('');\n    console.log(nameInputRef.current.value);\n    nameInputRef.current.value = '';\n  };\n  const nameInputClasses = enteredNameIsValid ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef,\n        onChange: nameInputHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), !enteredNameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"KraPb/vNRjKK9EiubOL/RxEW/YU=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","SimpleInput","props","_s","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","console","log","nameInputHandler","e","target","value","formSubmissionHandler","preventDefault","trim","current","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","onChange","_c","$RefreshReg$"],"sources":["/Volumes/External SSD/CodingSpace/ReactCourseUpSkilling/Section16Redo(Part2Validation2)/01-starting-project 9/src/components/SimpleInput.js"],"sourcesContent":["import React , {useState, useRef, useEffect} from 'react';\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef()\n  const [enteredName, setEnteredName] = useState('')\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false)\n\n  useEffect(()=>{\n    if(enteredNameIsValid){\n      console.log('name Input is Valid')\n    }\n  },[enteredNameIsValid])\n\n  const nameInputHandler = e =>{\n    setEnteredName(e.target.value)\n    setEnteredNameIsValid(true)\n  }\n  \n  const formSubmissionHandler = e =>{\n    e.preventDefault()\n\n    if(enteredName.trim() ===''){\n      console.log('theres nothing here!')\n      setEnteredNameIsValid(false)\n      return \n    }\n    setEnteredNameIsValid(true)\n\n\n    console.log(enteredName)\n    setEnteredName('')\n    console.log(nameInputRef.current.value)\n    nameInputRef.current.value = ''\n  }\n  const nameInputClasses = enteredNameIsValid ? 'form-control' : 'form-control invalid'\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' ref={nameInputRef} onChange={nameInputHandler} value={enteredName}/>\n      {!enteredNameIsValid && <p className='error-text'>must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAMC,YAAY,GAAGP,MAAM,EAAE;EAC7B,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnEE,SAAS,CAAC,MAAI;IACZ,IAAGS,kBAAkB,EAAC;MACpBE,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC;EACF,CAAC,EAAC,CAACH,kBAAkB,CAAC,CAAC;EAEvB,MAAMI,gBAAgB,GAAGC,CAAC,IAAG;IAC3BN,cAAc,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC9BN,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMO,qBAAqB,GAAGH,CAAC,IAAG;IAChCA,CAAC,CAACI,cAAc,EAAE;IAElB,IAAGX,WAAW,CAACY,IAAI,EAAE,KAAI,EAAE,EAAC;MAC1BR,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnCF,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACF;IACAA,qBAAqB,CAAC,IAAI,CAAC;IAG3BC,OAAO,CAACC,GAAG,CAACL,WAAW,CAAC;IACxBC,cAAc,CAAC,EAAE,CAAC;IAClBG,OAAO,CAACC,GAAG,CAACN,YAAY,CAACc,OAAO,CAACJ,KAAK,CAAC;IACvCV,YAAY,CAACc,OAAO,CAACJ,KAAK,GAAG,EAAE;EACjC,CAAC;EACD,MAAMK,gBAAgB,GAAGZ,kBAAkB,GAAG,cAAc,GAAG,sBAAsB;EACrF,oBACEP,OAAA;IAAMoB,QAAQ,EAAEL,qBAAsB;IAAAM,QAAA,gBACpCrB,OAAA;MAAKsB,SAAS,EAAEH,gBAAiB;MAAAE,QAAA,gBAC/BrB,OAAA;QAAOuB,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACvC3B,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,MAAM;QAACC,GAAG,EAAE1B,YAAa;QAAC2B,QAAQ,EAAEpB,gBAAiB;QAACG,KAAK,EAAET;MAAY;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,EAClG,CAACpB,kBAAkB,iBAAIP,OAAA;QAAGsB,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjE,eACN3B,OAAA;MAAKsB,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BrB,OAAA;QAAAqB,QAAA,EAAQ;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX,CAAC;AAACxB,EAAA,CA7CIF,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AA+CjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}