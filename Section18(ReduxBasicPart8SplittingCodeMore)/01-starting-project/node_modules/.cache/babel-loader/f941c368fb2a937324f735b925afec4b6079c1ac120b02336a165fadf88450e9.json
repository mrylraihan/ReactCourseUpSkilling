{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  toggle: true\n};\nconst counterSlice = createSlice({\n  name: 'counterSlice',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      // state.counter++ you can do this with redux ToolKit\n      return {\n        ...state,\n        counter: state.counter + 1\n      };\n    },\n    decrement(state) {\n      //state.counter--\n      return {\n        ...state,\n        counter: state.counter - 1\n      };\n    },\n    increase(state, action) {\n      // state.counter = state.counter + action.amount\n      // any value we pass in will be stored in a extra field called payload \n      return {\n        ...state,\n        counter: state.counter + action.payload\n      }; //this is because when i call the function i pass my data as a single value, .increase(10) if i passed in an object like increase({amount:10}), the i would access the amount key from the payload like action.payload.amount\n    },\n\n    toggleCounter(state) {\n      // state.toggle = !state.toggle\n      return {\n        ...state,\n        toggle: !state.toggle\n      };\n    }\n  }\n});\nexport default counterSlice;","map":{"version":3,"names":["createSlice","initialCounterState","counter","toggle","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter"],"sources":["/Volumes/External SSD/CodingSpace/ReactCourseUpSkilling/Section18(ReduxBasicPart8SplittingCodeMore)/01-starting-project/src/store/counter.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\n\n\nconst initialCounterState = { counter: 0, toggle: true }\n\nconst counterSlice = createSlice({\n    name: 'counterSlice',\n    initialState: initialCounterState,\n    reducers: {\n        increment(state) {\n            // state.counter++ you can do this with redux ToolKit\n            return { ...state, counter: state.counter + 1 }\n        },\n        decrement(state) {\n            //state.counter--\n            return { ...state, counter: state.counter - 1 }\n        },\n        increase(state, action) {\n            // state.counter = state.counter + action.amount\n            // any value we pass in will be stored in a extra field called payload \n            return { ...state, counter: state.counter + action.payload }//this is because when i call the function i pass my data as a single value, .increase(10) if i passed in an object like increase({amount:10}), the i would access the amount key from the payload like action.payload.amount\n        },\n        toggleCounter(state) {\n            // state.toggle = !state.toggle\n            return { ...state, toggle: !state.toggle }\n        }\n    }\n})\n\nexport default counterSlice"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAG5C,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,MAAM,EAAE;AAAK,CAAC;AAExD,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MACb;MACA,OAAO;QAAE,GAAGA,KAAK;QAAEP,OAAO,EAAEO,KAAK,CAACP,OAAO,GAAG;MAAE,CAAC;IACnD,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAE;MACb;MACA,OAAO;QAAE,GAAGA,KAAK;QAAEP,OAAO,EAAEO,KAAK,CAACP,OAAO,GAAG;MAAE,CAAC;IACnD,CAAC;IACDS,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACpB;MACA;MACA,OAAO;QAAE,GAAGH,KAAK;QAAEP,OAAO,EAAEO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC;MAAQ,CAAC;IAChE,CAAC;;IACDC,aAAaA,CAACL,KAAK,EAAE;MACjB;MACA,OAAO;QAAE,GAAGA,KAAK;QAAEN,MAAM,EAAE,CAACM,KAAK,CAACN;MAAO,CAAC;IAC9C;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}