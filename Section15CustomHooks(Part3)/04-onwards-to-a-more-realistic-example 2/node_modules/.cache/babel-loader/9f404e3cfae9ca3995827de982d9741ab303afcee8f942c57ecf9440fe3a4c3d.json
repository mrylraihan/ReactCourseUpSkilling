{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nfunction useHttp(requestConfig, applyData) {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n      const data = await response.json();\n      // // the firebase database returns an object of nested objects\n      // // we need to yous the weird ids to access them this is why we for \n      // //using a for in which is best for iterating through objects \n      // console.log(data['-NK4ASy7_ASKJ6Fo6PWl'].text)\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n}\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\nexport default useHttp;","map":{"version":3,"names":["React","useState","useHttp","requestConfig","applyData","isLoading","setIsLoading","error","setError","sendRequest","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactCourseUpSkilling/Section15CustomHooks(Part3)/04-onwards-to-a-more-realistic-example 2/src/hooks/use-http.js"],"sourcesContent":["import React, { useState } from 'react'\n\nfunction useHttp(requestConfig, applyData) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    \n    const sendRequest = async () => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const response = await fetch(\n               requestConfig.url, {\n                    method: requestConfig.method ? requestConfig.method :\"GET\" ,\n                    headers: requestConfig.headers ? requestConfig.headers : {},\n                    body: requestConfig.body? JSON.stringify(requestConfig.body): null\n               }\n            );\n\n            if (!response.ok) {\n                throw new Error('Request failed!');\n            }\n\n            const data = await response.json();\n            // // the firebase database returns an object of nested objects\n            // // we need to yous the weird ids to access them this is why we for \n            // //using a for in which is best for iterating through objects \n            // console.log(data['-NK4ASy7_ASKJ6Fo6PWl'].text)\n            applyData(data)\n        } catch (err) {\n            setError(err.message || 'Something went wrong!');\n        }\n        setIsLoading(false);\n    };\n    return {isLoading, error, sendRequest}\n}\n\nexport default useHttp"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,OAAO,CAACC,aAAa,EAAEC,SAAS,EAAE;EAAA;EACvC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,WAAW,GAAG,YAAY;IAC5BH,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CACzBR,aAAa,CAACS,GAAG,EAAE;QACdC,MAAM,EAAEV,aAAa,CAACU,MAAM,GAAGV,aAAa,CAACU,MAAM,GAAE,KAAK;QAC1DC,OAAO,EAAEX,aAAa,CAACW,OAAO,GAAGX,aAAa,CAACW,OAAO,GAAG,CAAC,CAAC;QAC3DC,IAAI,EAAEZ,aAAa,CAACY,IAAI,GAAEC,IAAI,CAACC,SAAS,CAACd,aAAa,CAACY,IAAI,CAAC,GAAE;MACnE,CAAC,CACH;MAED,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACtC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,EAAE;MAClC;MACA;MACA;MACA;MACAjB,SAAS,CAACgB,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACVd,QAAQ,CAACc,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IACpD;IACAjB,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EACD,OAAO;IAACD,SAAS;IAAEE,KAAK;IAAEE;EAAW,CAAC;AAC1C;AAAC,GAhCQP,OAAO;AAkChB,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}