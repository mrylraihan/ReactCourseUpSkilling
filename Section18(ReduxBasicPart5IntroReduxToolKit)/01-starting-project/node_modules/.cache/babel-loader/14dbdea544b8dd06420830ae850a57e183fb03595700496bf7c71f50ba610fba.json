{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initial = {\n  counter: 0,\n  toggle: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initial,\n  reducers: {\n    increment(state) {\n      // state.counter++ you can do this with redux ToolKit\n      return {\n        ...state,\n        counter: state.counter + 1\n      };\n    },\n    decrement(state) {\n      //state.counter--\n      return {\n        ...state,\n        counter: state.counter - 1\n      };\n    },\n    increase(state, action) {\n      // state.counter = state.counter + action.amount\n      return {\n        ...state,\n        counter: state.counter + action.amount\n      };\n    },\n    toggleCounter() {}\n  }\n});\nconst counterReducer = (state, action) => {\n  if (action.type == 'increment') {\n    return {\n      ...state,\n      counter: state.counter + 1\n    };\n  } else if (action.type == 'decrement') {\n    return {\n      ...state,\n      counter: state.counter - 1\n    };\n  } else if (action.type == 'increase') {\n    return {\n      ...state,\n      counter: state.counter + action.amount\n    };\n  } else if (action.type == 'toggle') {\n    return {\n      ...state,\n      toggle: !state.toggle\n    };\n  } else {\n    return state;\n  }\n};\nconst store = createStore(counterReducer, initial);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initial","counter","toggle","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","amount","toggleCounter","counterReducer","type","store"],"sources":["/Volumes/External SSD/CodingSpace/ReactCourseUpSkilling/Section18(ReduxBasicPart5IntroReduxToolKit)/01-starting-project/src/store/index.js"],"sourcesContent":["import {createStore} from 'redux'\nimport {createSlice} from '@reduxjs/toolkit'\n\nconst initial = {counter:0, toggle:true}\n\nconst counterSlice = createSlice({\nname:'counter',\ninitialState: initial,\nreducers:{\n    increment(state){\n        // state.counter++ you can do this with redux ToolKit\n        return { ...state, counter: state.counter + 1 }\n    },\n    decrement(state){\n        //state.counter--\n        return { ...state, counter: state.counter - 1 }\n    },\n    increase(state, action){\n        // state.counter = state.counter + action.amount\n        return { ...state, counter: state.counter + action.amount }\n    },\n    toggleCounter(){}\n}\n})\n\nconst counterReducer = (state, action)=>{\n    if(action.type == 'increment'){\n        return { ...state, counter:state.counter + 1}\n    }else if(action.type == 'decrement'){\n        return { ...state, counter: state.counter - 1 }\n    }else if(action.type == 'increase'){\n        return { ...state, counter: state.counter + action.amount }\n    } else if (action.type == 'toggle') {\n        return { ...state, toggle: !state.toggle }\n    } else{\n        return state\n    }\n}\n\nconst store = createStore(counterReducer, initial)\n\nexport default store"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AACjC,SAAQC,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,OAAO,GAAG;EAACC,OAAO,EAAC,CAAC;EAAEC,MAAM,EAAC;AAAI,CAAC;AAExC,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EACjCK,IAAI,EAAC,SAAS;EACdC,YAAY,EAAEL,OAAO;EACrBM,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAC;MACZ;MACA,OAAO;QAAE,GAAGA,KAAK;QAAEP,OAAO,EAAEO,KAAK,CAACP,OAAO,GAAG;MAAE,CAAC;IACnD,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAC;MACZ;MACA,OAAO;QAAE,GAAGA,KAAK;QAAEP,OAAO,EAAEO,KAAK,CAACP,OAAO,GAAG;MAAE,CAAC;IACnD,CAAC;IACDS,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAC;MACnB;MACA,OAAO;QAAE,GAAGH,KAAK;QAAEP,OAAO,EAAEO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC;MAAO,CAAC;IAC/D,CAAC;IACDC,aAAaA,CAAA,EAAE,CAAC;EACpB;AACA,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAGA,CAACN,KAAK,EAAEG,MAAM,KAAG;EACpC,IAAGA,MAAM,CAACI,IAAI,IAAI,WAAW,EAAC;IAC1B,OAAO;MAAE,GAAGP,KAAK;MAAEP,OAAO,EAACO,KAAK,CAACP,OAAO,GAAG;IAAC,CAAC;EACjD,CAAC,MAAK,IAAGU,MAAM,CAACI,IAAI,IAAI,WAAW,EAAC;IAChC,OAAO;MAAE,GAAGP,KAAK;MAAEP,OAAO,EAAEO,KAAK,CAACP,OAAO,GAAG;IAAE,CAAC;EACnD,CAAC,MAAK,IAAGU,MAAM,CAACI,IAAI,IAAI,UAAU,EAAC;IAC/B,OAAO;MAAE,GAAGP,KAAK;MAAEP,OAAO,EAAEO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC;IAAO,CAAC;EAC/D,CAAC,MAAM,IAAID,MAAM,CAACI,IAAI,IAAI,QAAQ,EAAE;IAChC,OAAO;MAAE,GAAGP,KAAK;MAAEN,MAAM,EAAE,CAACM,KAAK,CAACN;IAAO,CAAC;EAC9C,CAAC,MAAK;IACF,OAAOM,KAAK;EAChB;AACJ,CAAC;AAED,MAAMQ,KAAK,GAAGlB,WAAW,CAACgB,cAAc,EAAEd,OAAO,CAAC;AAElD,eAAegB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}