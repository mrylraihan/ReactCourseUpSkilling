{"ast":null,"code":"var _jsxFileName = \"/Volumes/External SSD/CodingSpace/ReactCourseUpSkilling/Section16Redo(Part2Validation4FormValiditity)/01-starting-project 9/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// onblur is a built in event that fires when ever the event loses focus\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState('');\n  // const [enteredNameIsValid, setEnteredNameIsValid] = useState(false) we dont need this because we can derive the value of this state from the enteredName state \n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  // const [formIsValid, setFormIsValid] = useState(false)\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n  // useEffect(()=>{\n  //   if(enteredNameIsValid){\n  //     setFormIsValid(true)\n  //   }else{\n  //     setFormIsValid(false)\n  //   }\n  // },[enteredNameIsValid])\n\n  const nameInputHandler = e => {\n    setEnteredName(e.target.value);\n    // setEnteredNameTouched(false)if you don't want it showing the error before getting of the input field\n  };\n\n  const nameInputBlurHandler = e => {\n    setEnteredNameTouched(true);\n  };\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    setEnteredName('');\n    setEnteredNameTouched(false);\n  };\n  //this is checking if name is valid is false and is touched \n\n  const nameInputClasses = nameInputIsInValid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputHandler,\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), nameInputIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid ? true : false,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"VUm+G9YkVtHi/Fjk92HS4+x5TZ8=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","nameInputIsInValid","formIsValid","nameInputHandler","e","target","value","nameInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Volumes/External SSD/CodingSpace/ReactCourseUpSkilling/Section16Redo(Part2Validation4FormValiditity)/01-starting-project 9/src/components/SimpleInput.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n// onblur is a built in event that fires when ever the event loses focus\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('')\n  // const [enteredNameIsValid, setEnteredNameIsValid] = useState(false) we dont need this because we can derive the value of this state from the enteredName state \n  const [enteredNameTouched, setEnteredNameTouched] = useState(false)\n  // const [formIsValid, setFormIsValid] = useState(false)\n\n\n  const enteredNameIsValid = enteredName.trim() !== ''\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouched\n  let formIsValid = false\n  if(enteredNameIsValid){\n    formIsValid = true\n  }\n  // useEffect(()=>{\n  //   if(enteredNameIsValid){\n  //     setFormIsValid(true)\n  //   }else{\n  //     setFormIsValid(false)\n  //   }\n  // },[enteredNameIsValid])\n  \n  const nameInputHandler = e => {\n    setEnteredName(e.target.value)\n    // setEnteredNameTouched(false)if you don't want it showing the error before getting of the input field\n  }\n\n  const nameInputBlurHandler = (e) => {\n    setEnteredNameTouched(true);\n  }\n\n  const formSubmissionHandler = e => {\n    e.preventDefault()\n\n    setEnteredNameTouched(true)\n    if(!enteredNameIsValid){\n      return\n    }\n\n    console.log(enteredName)\n    setEnteredName('')\n    setEnteredNameTouched(false)\n    \n  }\n  //this is checking if name is valid is false and is touched \n  \n  const nameInputClasses = nameInputIsInValid ? 'form-control invalid' : 'form-control'\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameInputHandler} value={enteredName} onBlur={nameInputBlurHandler} />\n        {nameInputIsInValid && <p className='error-text'>must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid?true:false}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD;EACA,MAAM,CAACQ,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnE;;EAGA,MAAMU,kBAAkB,GAAGJ,WAAW,CAACK,IAAI,EAAE,KAAK,EAAE;EACpD,MAAMC,kBAAkB,GAAG,CAACF,kBAAkB,IAAIF,kBAAkB;EACpE,IAAIK,WAAW,GAAG,KAAK;EACvB,IAAGH,kBAAkB,EAAC;IACpBG,WAAW,GAAG,IAAI;EACpB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,gBAAgB,GAAGC,CAAC,IAAI;IAC5BR,cAAc,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC9B;EACF,CAAC;;EAED,MAAMC,oBAAoB,GAAIH,CAAC,IAAK;IAClCN,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMU,qBAAqB,GAAGJ,CAAC,IAAI;IACjCA,CAAC,CAACK,cAAc,EAAE;IAElBX,qBAAqB,CAAC,IAAI,CAAC;IAC3B,IAAG,CAACC,kBAAkB,EAAC;MACrB;IACF;IAEAW,OAAO,CAACC,GAAG,CAAChB,WAAW,CAAC;IACxBC,cAAc,CAAC,EAAE,CAAC;IAClBE,qBAAqB,CAAC,KAAK,CAAC;EAE9B,CAAC;EACD;;EAEA,MAAMc,gBAAgB,GAAGX,kBAAkB,GAAG,sBAAsB,GAAG,cAAc;EACrF,oBACEV,OAAA;IAAMsB,QAAQ,EAAEL,qBAAsB;IAAAM,QAAA,gBACpCvB,OAAA;MAAKwB,SAAS,EAAEH,gBAAiB;MAAAE,QAAA,gBAC/BvB,OAAA;QAAOyB,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACvC7B,OAAA;QAAO8B,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,MAAM;QAACC,QAAQ,EAAEpB,gBAAiB;QAACG,KAAK,EAAEX,WAAY;QAAC6B,MAAM,EAAEjB;MAAqB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EAC5GnB,kBAAkB,iBAAIV,OAAA;QAAGwB,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClE,eACN7B,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BvB,OAAA;QAAQkC,QAAQ,EAAE,CAACvB,WAAW,GAAC,IAAI,GAAC,KAAM;QAAAY,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX,CAAC;AAAC1B,EAAA,CA1DIF,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AA4DjB,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}