{"ast":null,"code":"var _jsxFileName = \"/Volumes/External SSD/CodingSpace/ReactCourseUpSkilling/Section20(SpaRedoPart15JsonDynamicRoutes&Loaders)/12-adv-starting-project/frontend/src/pages/EventDetailPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const params = useParams();\n  const id = params.id;\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_s(EventDetailPage, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not find events'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","useParams","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","params","id","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","eventId","response","fetch","ok","json","message","status","$RefreshReg$"],"sources":["/Volumes/External SSD/CodingSpace/ReactCourseUpSkilling/Section20(SpaRedoPart15JsonDynamicRoutes&Loaders)/12-adv-starting-project/frontend/src/pages/EventDetailPage.jsx"],"sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport EventItem from '../components/EventItem'\nfunction EventDetailPage() {\n    const params = useParams()\n    const id = params.id\n  return (\n    <EventItem event={id}/>\n  )\n}\n\nexport default EventDetailPage\n\nexport async function loader({request,params}){\n  const id = params.eventId\n  const response = await fetch('http://localhost:8080/events/'+id)\n  if(!response.ok){\n    throw json({ message: 'Could not find events' }, { status: 500 })\n  }else{\n    return response \n  }\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC/C,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,MAAM,GAAGN,SAAS,EAAE;EAC1B,MAAMO,EAAE,GAAGD,MAAM,CAACC,EAAE;EACtB,oBACEJ,OAAA,CAACF,SAAS;IAACO,KAAK,EAAED;EAAG;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AAE3B;AAACP,EAAA,CANQD,eAAe;EAAA,QACLJ,SAAS;AAAA;AAAAa,EAAA,GADnBT,eAAe;AAQxB,eAAeA,eAAe;AAE9B,OAAO,eAAeU,MAAMA,CAAAC,IAAA,EAAkB;EAAA,IAAjB;IAACC,OAAO;IAACV;EAAM,CAAC,GAAAS,IAAA;EAC3C,MAAMR,EAAE,GAAGD,MAAM,CAACW,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAACZ,EAAE,CAAC;EAChE,IAAG,CAACW,QAAQ,CAACE,EAAE,EAAC;IACd,MAAMC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACnE,CAAC,MAAI;IACH,OAAOL,QAAQ;EACjB;AACF;AAAC,IAAAL,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}