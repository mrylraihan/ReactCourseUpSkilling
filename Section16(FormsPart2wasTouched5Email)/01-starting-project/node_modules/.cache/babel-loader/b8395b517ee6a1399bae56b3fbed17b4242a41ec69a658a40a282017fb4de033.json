{"ast":null,"code":"var _jsxFileName = \"/Volumes/External SSD/CodingSpace/ReactCourseUpSkilling/Section16(FormsPart2wasTouched5Email)/01-starting-project/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState('');\n  // const [enteredNameIsValid, setEnteredNameIsValid] = useState(false)\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const enteredNameIsValid = enteredName.trim() && enteredNameTouched ? true : false;\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouched;\n  useEffect(() => {\n    if (enteredNameIsValid) setFormIsValid(true);else setFormIsValid(false);\n  }, [enteredNameIsValid]);\n  const nameInputChangeHandler = e => {\n    setEnteredName(e.target.value);\n    //  if(e.target.value.trim() !== '')setEnteredNameIsValid(true)\n  };\n\n  const nameInputBlurHandler = e => {\n    setEnteredNameTouched(true);\n    // if (enteredName.trim() === '') {\n    //   // setEnteredNameIsValid(false)\n    //   return\n    // }else{\n    //   setEnteredNameIsValid(true)\n    // }\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName, 'In Submit');\n    // const enteredValue = nameInputRef.current.value\n    // console.log(enteredValue);\n    // nameInputRef.current.value = ''\n    setEnteredName('');\n    setEnteredNameTouched(false);\n  };\n  const nameInputClasses = nameInputIsInValid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: enteredName,\n        type: \"text\",\n        id: \"name\",\n        onBlur: nameInputBlurHandler,\n        onChange: nameInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), nameInputIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"name should not be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: enteredName,\n        type: \"email\",\n        id: \"email\",\n        onBlur: emailInputBlurHandler,\n        onChange: emailInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), emailInputIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"email should not be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"0gOgJILy4SAo8AFc6nXz38Q86n4=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useEffect","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","formIsValid","setFormIsValid","enteredNameIsValid","trim","nameInputIsInValid","nameInputChangeHandler","e","target","value","nameInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","emailInputBlurHandler","emailInputChangeHandler","emailInputIsInValid"],"sources":["/Volumes/External SSD/CodingSpace/ReactCourseUpSkilling/Section16(FormsPart2wasTouched5Email)/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('')\n  // const [enteredNameIsValid, setEnteredNameIsValid] = useState(false)\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false)\n  const [formIsValid, setFormIsValid] = useState(false)\n\n  const enteredNameIsValid = enteredName.trim() && enteredNameTouched ? true : false;\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouched;\n  \n  useEffect(() => {\n    if(enteredNameIsValid )setFormIsValid(true)\n    else setFormIsValid(false)\n  }, [enteredNameIsValid, ])\n\n\n  const nameInputChangeHandler = e => {\n    setEnteredName(e.target.value)\n    //  if(e.target.value.trim() !== '')setEnteredNameIsValid(true)\n  }\n\n  const nameInputBlurHandler = e => {\n    setEnteredNameTouched(true)\n    // if (enteredName.trim() === '') {\n    //   // setEnteredNameIsValid(false)\n    //   return\n    // }else{\n    //   setEnteredNameIsValid(true)\n    // }\n  }\n\n  const formSubmissionHandler = e => {\n    e.preventDefault()\n\n    setEnteredNameTouched(true)\n\n    if (!enteredNameIsValid) {\n      return\n    }\n    console.log(enteredName, 'In Submit')\n    // const enteredValue = nameInputRef.current.value\n    // console.log(enteredValue);\n    // nameInputRef.current.value = ''\n    setEnteredName('')\n    setEnteredNameTouched(false)\n\n  }\n\n  const nameInputClasses = nameInputIsInValid ? 'form-control invalid' : 'form-control'\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input value={enteredName} type='text' id='name' onBlur={nameInputBlurHandler} onChange={nameInputChangeHandler} />\n        {nameInputIsInValid && <p className=\"error-text\">name should not be empty!</p>}\n        <label htmlFor='email'>Your Email</label>\n        <input value={enteredName} type='email' id='email' onBlur={emailInputBlurHandler} onChange={emailInputChangeHandler} />\n        {emailInputIsInValid && <p className=\"error-text\">email should not be empty!</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button type=\"submit\" disabled={!formIsValid}>Submit</button>\n      </div>\n\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAE5C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAClD;EACA,MAAM,CAACM,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMU,kBAAkB,GAAGN,WAAW,CAACO,IAAI,EAAE,IAAIL,kBAAkB,GAAG,IAAI,GAAG,KAAK;EAClF,MAAMM,kBAAkB,GAAG,CAACF,kBAAkB,IAAIJ,kBAAkB;EAEpEL,SAAS,CAAC,MAAM;IACd,IAAGS,kBAAkB,EAAED,cAAc,CAAC,IAAI,CAAC,MACtCA,cAAc,CAAC,KAAK,CAAC;EAC5B,CAAC,EAAE,CAACC,kBAAkB,CAAG,CAAC;EAG1B,MAAMG,sBAAsB,GAAGC,CAAC,IAAI;IAClCT,cAAc,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC9B;EACF,CAAC;;EAED,MAAMC,oBAAoB,GAAGH,CAAC,IAAI;IAChCP,qBAAqB,CAAC,IAAI,CAAC;IAC3B;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED,MAAMW,qBAAqB,GAAGJ,CAAC,IAAI;IACjCA,CAAC,CAACK,cAAc,EAAE;IAElBZ,qBAAqB,CAAC,IAAI,CAAC;IAE3B,IAAI,CAACG,kBAAkB,EAAE;MACvB;IACF;IACAU,OAAO,CAACC,GAAG,CAACjB,WAAW,EAAE,WAAW,CAAC;IACrC;IACA;IACA;IACAC,cAAc,CAAC,EAAE,CAAC;IAClBE,qBAAqB,CAAC,KAAK,CAAC;EAE9B,CAAC;EAED,MAAMe,gBAAgB,GAAGV,kBAAkB,GAAG,sBAAsB,GAAG,cAAc;EACrF,oBACE;IAAM,QAAQ,EAAEM,qBAAsB;IAAA,wBACpC;MAAK,SAAS,EAAEI,gBAAiB;MAAA,wBAC/B;QAAO,OAAO,EAAC,MAAM;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eACvC;QAAO,KAAK,EAAElB,WAAY;QAAC,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,MAAM;QAAC,MAAM,EAAEa,oBAAqB;QAAC,QAAQ,EAAEJ;MAAuB;QAAA;QAAA;QAAA;MAAA,QAAG,EAClHD,kBAAkB,iBAAI;QAAG,SAAS,EAAC,YAAY;QAAA,UAAC;MAAyB;QAAA;QAAA;QAAA;MAAA,QAAI,eAC9E;QAAO,OAAO,EAAC,OAAO;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAQ,eACzC;QAAO,KAAK,EAAER,WAAY;QAAC,IAAI,EAAC,OAAO;QAAC,EAAE,EAAC,OAAO;QAAC,MAAM,EAAEmB,qBAAsB;QAAC,QAAQ,EAAEC;MAAwB;QAAA;QAAA;QAAA;MAAA,QAAG,EACtHC,mBAAmB,iBAAI;QAAG,SAAS,EAAC,YAAY;QAAA,UAAC;MAA0B;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5E,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC3B;QAAQ,IAAI,EAAC,QAAQ;QAAC,QAAQ,EAAE,CAACjB,WAAY;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACzD;EAAA;IAAA;IAAA;IAAA;EAAA,QAED;AAEX,CAAC;AAAC,GAhEIN,WAAW;AAAA,KAAXA,WAAW;AAkEjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}