{"ast":null,"code":"// import {createStore} from 'redux'\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nimport counterSlice from './counter';\n\n// const initialCounterState = {counter:0, toggle:true}\n\n// const counterSlice = createSlice({\n// name:'counterSlice',\n// initialState: initialCounterState,\n// reducers:{\n//     increment(state){\n//         // state.counter++ you can do this with redux ToolKit\n//         return { ...state, counter: state.counter + 1 }\n//     },\n//     decrement(state){\n//         //state.counter--\n//         return { ...state, counter: state.counter - 1 }\n//     },\n//     increase(state, action){\n//         // state.counter = state.counter + action.amount\n//         // any value we pass in will be stored in a extra field called payload \n//         return { ...state, counter: state.counter + action.payload }//this is because when i call the function i pass my data as a single value, .increase(10) if i passed in an object like increase({amount:10}), the i would access the amount key from the payload like action.payload.amount\n//     },\n//     toggleCounter(state){\n//         // state.toggle = !state.toggle\n//         return { ...state, toggle: !state.toggle }\n//     }\n// }\n// })\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","counterSlice","store","reducer","counter","auth","authSlice","counterActions","actions","authActions"],"sources":["/Volumes/External SSD/CodingSpace/ReactCourseUpSkilling/Section18(ReduxBasicPart8SplittingCode)/01-starting-project/src/store/index.js"],"sourcesContent":["// import {createStore} from 'redux'\nimport {createSlice, configureStore} from '@reduxjs/toolkit'\nimport counterSlice from './counter'\n\n// const initialCounterState = {counter:0, toggle:true}\n\n// const counterSlice = createSlice({\n// name:'counterSlice',\n// initialState: initialCounterState,\n// reducers:{\n//     increment(state){\n//         // state.counter++ you can do this with redux ToolKit\n//         return { ...state, counter: state.counter + 1 }\n//     },\n//     decrement(state){\n//         //state.counter--\n//         return { ...state, counter: state.counter - 1 }\n//     },\n//     increase(state, action){\n//         // state.counter = state.counter + action.amount\n//         // any value we pass in will be stored in a extra field called payload \n//         return { ...state, counter: state.counter + action.payload }//this is because when i call the function i pass my data as a single value, .increase(10) if i passed in an object like increase({amount:10}), the i would access the amount key from the payload like action.payload.amount\n//     },\n//     toggleCounter(state){\n//         // state.toggle = !state.toggle\n//         return { ...state, toggle: !state.toggle }\n//     }\n// }\n// })\n\n\nconst store = configureStore({reducer:{\n        counter:counterSlice.reducer,\n    auth: authSlice.reducer,\n    }})\n    \n\nexport const counterActions = counterSlice.actions \nexport const authActions = authSlice.actions\nexport default store\n"],"mappings":"AAAA;AACA,SAAQA,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAC5D,OAAOC,YAAY,MAAM,WAAW;;AAEpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,KAAK,GAAGF,cAAc,CAAC;EAACG,OAAO,EAAC;IAC9BC,OAAO,EAACH,YAAY,CAACE,OAAO;IAChCE,IAAI,EAAEC,SAAS,CAACH;EAChB;AAAC,CAAC,CAAC;AAGP,OAAO,MAAMI,cAAc,GAAGN,YAAY,CAACO,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGH,SAAS,CAACE,OAAO;AAC5C,eAAeN,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}