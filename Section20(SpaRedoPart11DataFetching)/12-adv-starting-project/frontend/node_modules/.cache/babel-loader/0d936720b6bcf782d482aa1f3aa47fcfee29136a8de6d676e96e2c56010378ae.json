{"ast":null,"code":"var _jsxFileName = \"/Volumes/External SSD/CodingSpace/ReactCourseUpSkilling/Section20(SpaRedoPart10Practice)/12-adv-starting-project/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport EventsPage from './pages/EventsPage';\nimport EventDetailPage from './pages/EventDetailPage';\nimport NewEventPage from './pages/NewEventPage';\nimport EditEventPage from './pages/EditEventPage';\nimport Root from './pages/Root';\nimport { Children } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 22\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 26\n    }, this)\n  }, {\n    path: 'events',\n    element: /*#__PURE__*/_jsxDEV(EventsRoot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }, this)\n  }, {\n    index,\n    element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this)\n  }, {\n    path: 'events/:id',\n    element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }, this)\n  }, {\n    path: 'events/new',\n    element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }, this)\n  }, {\n    path: 'events/:id/edit',\n    element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 38\n    }, this)\n  }]\n}]);\n// const router = createBrowserRouter([\n//   {path:'/' ,element:<Root/> ,children:[\n//     {index:true ,element:<HomePage/>},\n//     {path:'events' ,element:<EventsPage/>},\n//     {path:'events/:id' ,element:<EventDetailPage/>},\n//     {path:'events/new' ,element:<NewEventPage/>},\n//     {path:'events/:id/edit' ,element:<EditEventPage/>}\n//   ]},\n// ])\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n  ;\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","Root","Children","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","EventsRoot","App","_c","$RefreshReg$"],"sources":["/Volumes/External SSD/CodingSpace/ReactCourseUpSkilling/Section20(SpaRedoPart10Practice)/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport {RouterProvider, createBrowserRouter} from 'react-router-dom'\nimport HomePage from './pages/HomePage';\nimport EventsPage from './pages/EventsPage';\nimport EventDetailPage from './pages/EventDetailPage';\nimport NewEventPage from './pages/NewEventPage';\nimport EditEventPage from './pages/EditEventPage';\nimport Root from './pages/Root';\nimport { Children } from 'react';\n\nconst router = createBrowserRouter([\n  {path:'/' ,element:<Root/> ,children:[\n    {index:true ,element:<HomePage/>},\n    {path:'events' ,element:<EventsRoot/>},\n    {index ,element:<EventsPage/>},\n    {path:'events/:id' ,element:<EventDetailPage/>},\n    {path:'events/new' ,element:<NewEventPage/>},\n    {path:'events/:id/edit' ,element:<EditEventPage/>}\n  ]},\n])\n// const router = createBrowserRouter([\n//   {path:'/' ,element:<Root/> ,children:[\n//     {index:true ,element:<HomePage/>},\n//     {path:'events' ,element:<EventsPage/>},\n//     {path:'events/:id' ,element:<EventDetailPage/>},\n//     {path:'events/new' ,element:<NewEventPage/>},\n//     {path:'events/:id/edit' ,element:<EditEventPage/>}\n//   ]},\n// ])\nfunction App() {\n  return <RouterProvider router={router} />;;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,cAAc,EAAEC,mBAAmB,QAAO,kBAAkB;AACpE,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,MAAM,GAAGV,mBAAmB,CAAC,CACjC;EAACW,IAAI,EAAC,GAAG;EAAEC,OAAO,eAACH,OAAA,CAACH,IAAI;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;EAAEC,QAAQ,EAAC,CACnC;IAACC,KAAK,EAAC,IAAI;IAAEN,OAAO,eAACH,OAAA,CAACR,QAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE,CAAC,EACjC;IAACL,IAAI,EAAC,QAAQ;IAAEC,OAAO,eAACH,OAAA,CAACU,UAAU;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE,CAAC,EACtC;IAACE,KAAK;IAAEN,OAAO,eAACH,OAAA,CAACP,UAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE,CAAC,EAC9B;IAACL,IAAI,EAAC,YAAY;IAAEC,OAAO,eAACH,OAAA,CAACN,eAAe;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE,CAAC,EAC/C;IAACL,IAAI,EAAC,YAAY;IAAEC,OAAO,eAACH,OAAA,CAACL,YAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE,CAAC,EAC5C;IAACL,IAAI,EAAC,iBAAiB;IAAEC,OAAO,eAACH,OAAA,CAACJ,aAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE,CAAC;AACnD,CAAC,CACH,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,GAAGA,CAAA,EAAG;EACb,oBAAOX,OAAA,CAACV,cAAc;IAACW,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;EAAC;AAC5C;AAACK,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}