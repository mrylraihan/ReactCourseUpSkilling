{"ast":null,"code":"var _jsxFileName = \"/Volumes/External SSD/CodingSpace/ReactCourseUpSkilling/Section16Redo(Part3CustomInputHook)/01-starting-project 9/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport useInput from '../hooks/use-input';\n// onblur is a built in event that fires when ever the event loses focus\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChnag\n  } = useInput();\n\n  // const [enteredName, setEnteredName] = useState('')\n  // const [enteredNameTouched, setEnteredNameTouched] = useState(false)\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  // name Validity\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouched;\n  // email Validity\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const emailInputIsInValid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  // useEffect(()=>{\n  //   if(enteredNameIsValid){\n  //     setFormIsValid(true)\n  //   }else{\n  //     setFormIsValid(false)\n  //   }\n  // },[enteredNameIsValid])\n\n  // const nameInputHandler = e => {\n  //   setEnteredName(e.target.value)\n  //   // setEnteredNameTouched(false)if you don't want it showing the error before getting of the input field\n  // }\n  const emailInputHandler = e => {\n    setEnteredEmail(e.target.value);\n    // setEnteredNameTouched(false)if you don't want it showing the error before getting of the input field\n  };\n\n  // const nameInputBlurHandler = (e) => {\n  //   setEnteredNameTouched(true);\n  // }\n  const emailInputBlurHandler = e => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n  //this is checking if name is valid is false and is touched \n\n  const nameInputClasses = nameInputIsInValid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInValid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputHandler,\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), nameInputIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputHandler,\n        value: enteredEmail,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), emailInputIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please Enter Valid Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid ? true : false,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"rPG00wR7pFN1dlZMjVgfOyW0Qbs=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","hasError","nameInputHasError","valueChangeHandler","nameChnag","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","nameInputIsInValid","enteredNameTouched","enteredEmailIsValid","includes","emailInputIsInValid","formIsValid","emailInputHandler","e","target","emailInputBlurHandler","formSubmissionHandler","preventDefault","setEnteredNameTouched","console","log","setEnteredName","nameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","nameInputHandler","onBlur","nameInputBlurHandler","disabled","_c","$RefreshReg$"],"sources":["/Volumes/External SSD/CodingSpace/ReactCourseUpSkilling/Section16Redo(Part3CustomInputHook)/01-starting-project 9/src/components/SimpleInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport useInput from '../hooks/use-input';\n// onblur is a built in event that fires when ever the event loses focus\nconst SimpleInput = (props) => {\n  const {value:enteredName, hasError:nameInputHasError, valueChangeHandler:nameChnag, }= useInput()\n\n  // const [enteredName, setEnteredName] = useState('')\n  // const [enteredNameTouched, setEnteredNameTouched] = useState(false)\n  const [enteredEmail, setEnteredEmail] = useState('')\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false)\n\n\n// name Validity\n  const enteredNameIsValid = enteredName.trim() !== ''\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouched\n// email Validity\n  const enteredEmailIsValid = enteredEmail.includes('@')\n  const emailInputIsInValid = !enteredEmailIsValid && enteredEmailTouched\n  \n  let formIsValid = false\n  if(enteredNameIsValid && enteredEmailIsValid){\n    formIsValid = true\n  }\n  // useEffect(()=>{\n  //   if(enteredNameIsValid){\n  //     setFormIsValid(true)\n  //   }else{\n  //     setFormIsValid(false)\n  //   }\n  // },[enteredNameIsValid])\n  \n  // const nameInputHandler = e => {\n  //   setEnteredName(e.target.value)\n  //   // setEnteredNameTouched(false)if you don't want it showing the error before getting of the input field\n  // }\n  const emailInputHandler = e => {\n    setEnteredEmail(e.target.value)\n    // setEnteredNameTouched(false)if you don't want it showing the error before getting of the input field\n  }\n\n  // const nameInputBlurHandler = (e) => {\n  //   setEnteredNameTouched(true);\n  // }\n  const emailInputBlurHandler = (e) => {\n    setEnteredEmailTouched(true);\n  }\n\n  const formSubmissionHandler = e => {\n    e.preventDefault()\n\n    setEnteredNameTouched(true)\n    if(!enteredNameIsValid){\n      return\n    }\n\n    console.log(enteredName)\n    setEnteredName('')\n    setEnteredEmail('')\n    setEnteredNameTouched(false)\n    setEnteredEmailTouched(false)\n    \n  }\n  //this is checking if name is valid is false and is touched \n  \n  const nameInputClasses = nameInputIsInValid ? 'form-control invalid' : 'form-control'\n  const emailInputClasses = emailInputIsInValid ? 'form-control invalid' : 'form-control'\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameInputHandler} value={enteredName} onBlur={nameInputBlurHandler} />\n        {nameInputIsInValid && <p className='error-text'>must not be empty</p>}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input type='email' id='email' onChange={emailInputHandler} value={enteredEmail} onBlur={emailInputBlurHandler} />\n        {emailInputIsInValid && <p className='error-text'>Please Enter Valid Email</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid?true:false}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}